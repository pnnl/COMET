# Sparse matrix dense matrix elementwise subtraction
# Sparse matrix is in CSR format. Currently workspace transformation on the IndexTree dialect works for only CSR format
# RUN: comet-opt --opt-comp-workspace --convert-ta-to-it --convert-to-loops --convert-to-llvm %s &> eltwise_sub_CSRxCSR_oCSR_sameSpPattern.llvm
# RUN: export SPARSE_FILE_NAME0=%comet_integration_test_data_dir/test_rank2.mtx
# RUN: export SPARSE_FILE_NAME1=%comet_integration_test_data_dir/test_rank2_transpose.mtx
# RUN: mlir-cpu-runner eltwise_sub_CSRxCSR_oCSR_sameSpPattern.llvm -O3 -e main -entry-point-result=void -shared-libs=%comet_utility_library_dir/libcomet_runner_utils%shlibext | FileCheck %s


def main() {
    #IndexLabel Declarations
    IndexLabel [i] = [?];
    IndexLabel [j] = [?];
    
    #Tensor Declarations
    Tensor<double> A([i, j], {CSR});	 
    Tensor<double> B([i, j], {CSR});
    Tensor<double> C([i, j], {CSR});
    
    #Tensor Readfile Operation
    A[i, j] = comet_read(0);
    B[i, j] = comet_read(1);
    
    #Tensor Contraction
    C[i, j] = A[i, j] - B[i, j];
    print(C);
}

# Print the result for verification.
# CHECK: data = 
# CHECK-NEXT: 5,
# CHECK-NEXT: data = 
# CHECK-NEXT: 0,
# CHECK-NEXT: data = 
# CHECK-NEXT: 0,2,4,5,7,9,
# CHECK-NEXT: data = 
# CHECK-NEXT: 0,3,1,4,2,0,3,1,4,
# CHECK-NEXT: data = 
# CHECK-NEXT: 0,-2.7,0,-2.7,0,2.7,0,2.7,0,