# RUN: comet-opt --convert-to-loops --convert-to-llvm %s &> utility_printCSR.llvm
# RUN: export SPARSE_FILE_NAME0=%comet_integration_test_data_dir/test_rank2_small.mtx
# RUN: mlir-cpu-runner utility_printCSR.llvm -O3 -e main -entry-point-result=void -shared-libs=%comet_utility_library_dir/libcomet_runner_utils%shlibext | FileCheck %s

def main() {
	#IndexLabel Declarations
	IndexLabel [a] = [?];
	IndexLabel [b] = [?];
	
	#Tensor Declarations
	Tensor<double> A([a, b], {CSR});	  

	#Tensor Fill Operation
	A[i, j] = comet_read(0);
	
	print(A);
}

# Tensor A is printed in COO. Each data corresponds to A1_pos, A1_crd, A2_pos, A2_crd, Value, respectively. 
# data = -1 means that no data needed for this array
# Look at the following paper - https://arxiv.org/pdf/2102.05187.pdf - for the internal tensor storage format details.
# CHECK: data = 
# CHECK-NEXT: 5,
# CHECK-NEXT: data = 
# CHECK-NEXT: -1,
# CHECK-NEXT: data = 
# CHECK-NEXT: 0,2,4,4,5,7,
# CHECK-NEXT: data = 
# CHECK-NEXT: 0,3,0,1,1,2,3,
# CHECK-NEXT: data = 
# CHECK-NEXT: 1,2,3,4,5,6,7,