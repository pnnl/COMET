# RUN: comet-opt --convert-ta-to-it --convert-to-loops %s &> dTranspose_eltwise_CSR.mlir
# RUN: export SPARSE_FILE_NAME0=%comet_integration_test_data_dir/test_rank2.mtx
# RUN: export SORT_TYPE=SEQ_QSORT
# RUN: mlir-cpu-runner dTranspose_eltwise_CSR.llvm -O3 -e main -entry-point-result=void -shared-libs=%mlir_utility_library_dir/libmlir_runner_utils%shlibext,%comet_utility_library_dir/libcomet_runner_utils%shlibext | FileCheck %s

#TODO(gkestor): read dense input from file

def main() {
	#IndexLabel Declarations
	IndexLabel [i] = [?];
	IndexLabel [j] = [?];                     

	#Tensor Declarations
	Tensor<double> B([j, i], CSR);
	Tensor<double> C([j, i], CSR);
	Tensor<double> A([i, j], Dense);	  

    #Tensor Readfile Operation      
    A[i, j] = 3.2;
	B[j, i] = comet_read(0);

	#Tensor Transpose
	C[j, i] = transpose(A[i, j],{j,i}) .* B[j, i];
	print(C);
}

# Print the result for verification.
# CHECK: data = 
# CHECK-NEXT: 5,
# CHECK-NEXT: data = 
# CHECK-NEXT: 0,
# CHECK-NEXT: data = 
# CHECK-NEXT: 0,2,4,5,7,9,
# CHECK-NEXT: data = 
# CHECK-NEXT: 0,3,1,4,2,0,3,1,4,
# CHECK-NEXT: data = 
# CHECK-NEXT: 3.2,4.48,6.4,8,9.6,13.12,12.8,16.64,16,